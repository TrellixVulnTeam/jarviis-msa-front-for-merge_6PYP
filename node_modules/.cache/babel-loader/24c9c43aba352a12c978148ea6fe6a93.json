{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, suggestionRequest, suggestionAcceptFailure, suggestionAcceptRequest, suggestionAcceptSuccess, suggestionSuccess, suggestionRejectRequest, suggestionRejectSuccess, suggestionRejectFailure } from \"../reducer/suggestionSlice\"; //리스트\n\nfunction* suggestionUser(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionAPI, action.payload);\n    yield put(suggestionSuccess(result));\n  } catch (error) {\n    yield put(suggestionFailure(error));\n    alert(error);\n  }\n}\n\nfunction* accecpt(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionAcceptAPI, action.payload);\n    yield put(suggestionAcceptSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionAcceptFailure(error));\n    alert(error);\n  }\n}\n\nfunction* reject(action) {\n  try {\n    const result = yield call(suggestionAPI.suggestionRejectAPI, action.payload);\n    yield put(suggestionRejectSuccess(result)); // window.location.href =''\n  } catch (error) {\n    yield put(suggestionRejectFailure(error));\n    alert(error);\n  }\n}\n\nexport function* wacthSuggestion() {\n  yield takeLatest(suggestionRequest.type, suggestionUser);\n}\nexport function* wacthAccept() {\n  yield takeLatest(suggestionAcceptRequest.type, accecpt);\n}\nexport function* wacthReject() {\n  yield takeLatest(suggestionRejectRequest.type, reject);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis/jarviis-msa-front-for-merge/src/features/suggestion/module/suggestionSaga.ts"],"names":["call","put","takeLatest","suggestionAPI","suggestionFailure","suggestionRequest","suggestionAcceptFailure","suggestionAcceptRequest","suggestionAcceptSuccess","suggestionSuccess","suggestionRejectRequest","suggestionRejectSuccess","suggestionRejectFailure","suggestionUser","action","result","payload","error","alert","accecpt","suggestionAcceptAPI","reject","suggestionRejectAPI","wacthSuggestion","type","wacthAccept","wacthReject"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,iBAAT,EAA0EC,iBAA1E,EACEC,uBADF,EACoDC,uBADpD,EAC6EC,uBAD7E,EACsGC,iBADtG,EACyHC,uBADzH,EACkJC,uBADlJ,EAC2KC,uBAD3K,QAC0M,4BAD1M,C,CAIA;;AACA,UAAUC,cAAV,CAAyBC,MAAzB,EAAmE;AACjE,MAAI;AACA,UAAMC,MAAiC,GAAG,MAAMf,IAAI,CAClDG,aAAa,CAACA,aADoC,EAElDW,MAAM,CAACE,OAF2C,CAApD;AAIA,UAAMf,GAAG,CAACQ,iBAAiB,CAACM,MAAD,CAAlB,CAAT;AAEH,GAPD,CAOE,OAAOE,KAAP,EAAmB;AACjB,UAAMhB,GAAG,CAACG,iBAAiB,CAACa,KAAD,CAAlB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACH;AACF;;AAED,UAAUE,OAAV,CAAkBL,MAAlB,EAAiE;AAC/D,MAAI;AACF,UAAMC,MAA+B,GAAG,MAAMf,IAAI,CAChDG,aAAa,CAACiB,mBADkC,EAEhDN,MAAM,CAACE,OAFyC,CAAlD;AAIA,UAAMf,GAAG,CAACO,uBAAuB,CAACO,MAAD,CAAxB,CAAT,CALE,CAMF;AACD,GAPD,CAOE,OAAOE,KAAP,EAAmB;AACnB,UAAMhB,GAAG,CAACK,uBAAuB,CAACW,KAAD,CAAxB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF;;AAED,UAAUI,MAAV,CAAiBP,MAAjB,EAAgE;AAC9D,MAAI;AACF,UAAMC,MAA+B,GAAG,MAAMf,IAAI,CAChDG,aAAa,CAACmB,mBADkC,EAEhDR,MAAM,CAACE,OAFyC,CAAlD;AAIA,UAAMf,GAAG,CAACU,uBAAuB,CAACI,MAAD,CAAxB,CAAT,CALE,CAMF;AACD,GAPD,CAOE,OAAOE,KAAP,EAAmB;AACnB,UAAMhB,GAAG,CAACW,uBAAuB,CAACK,KAAD,CAAxB,CAAT;AACAC,IAAAA,KAAK,CAACD,KAAD,CAAL;AACD;AACF;;AAED,OAAO,UAAUM,eAAV,GAA2B;AAChC,QAAMrB,UAAU,CAACG,iBAAiB,CAACmB,IAAnB,EAAyBX,cAAzB,CAAhB;AACD;AAED,OAAO,UAAUY,WAAV,GAAuB;AAC5B,QAAMvB,UAAU,CAACK,uBAAuB,CAACiB,IAAzB,EAA+BL,OAA/B,CAAhB;AACD;AAED,OAAO,UAAUO,WAAV,GAAuB;AAC5B,QAAMxB,UAAU,CAACQ,uBAAuB,CAACc,IAAzB,EAA+BH,MAA/B,CAAhB;AACD","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { suggestionAPI } from \"features/suggestion\";\nimport { suggestionFailure, SuggestionListDataPayload, SuggestionPayload, suggestionRequest, \n  suggestionAcceptFailure, SuggestionResultPayload, suggestionAcceptRequest, suggestionAcceptSuccess, suggestionSuccess, suggestionRejectRequest, suggestionRejectSuccess, suggestionRejectFailure } from \"../reducer/suggestionSlice\";\n\n\n//리스트\nfunction* suggestionUser(action: PayloadAction<SuggestionPayload>) {\n  try {\n      const result: SuggestionListDataPayload = yield call(\n        suggestionAPI.suggestionAPI,\n        action.payload\n      );\n      yield put(suggestionSuccess(result));\n\n  } catch (error: any) {\n      yield put(suggestionFailure(error))\n      alert(error)\n  }\n}\n\nfunction* accecpt(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionAcceptAPI,\n      action.payload\n    );\n    yield put(suggestionAcceptSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionAcceptFailure(error))\n    alert(error)\n  }\n}\n\nfunction* reject(action: PayloadAction<SuggestionResultPayload>){\n  try {\n    const result: SuggestionResultPayload = yield call(\n      suggestionAPI.suggestionRejectAPI,\n      action.payload\n    );\n    yield put(suggestionRejectSuccess(result));\n    // window.location.href =''\n  } catch (error: any) {\n    yield put(suggestionRejectFailure(error))\n    alert(error)\n  }\n}\n\nexport function* wacthSuggestion(){\n  yield takeLatest(suggestionRequest.type, suggestionUser);\n}\n\nexport function* wacthAccept(){\n  yield takeLatest(suggestionAcceptRequest.type, accecpt)\n}\n\nexport function* wacthReject(){\n  yield takeLatest(suggestionRejectRequest.type, reject)\n}"]},"metadata":{},"sourceType":"module"}