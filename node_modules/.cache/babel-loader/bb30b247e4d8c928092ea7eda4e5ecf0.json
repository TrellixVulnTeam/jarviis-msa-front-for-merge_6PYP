{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\seosuwan\\\\Desktop\\\\team\\\\jarviis-msa-front-for-merge\\\\src\\\\features\\\\user\\\\components\\\\UserList.js\";\nimport * as React from 'react';\nimport { useEffect } from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport 'features/user/style/UserList.scss';\nimport { useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const {\n    count,\n    page,\n    rowsPerPage,\n    onPageChange\n  } = props;\n\n  const handleFirstPageButtonClick = event => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = event => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = event => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = event => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexShrink: 0,\n      ml: 2.5\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleFirstPageButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"first page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 57\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleBackButtonClick,\n      disabled: page === 0,\n      \"aria-label\": \"previous page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 63\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleNextButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"next page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(KeyboardArrowLeft, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(KeyboardArrowRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 62\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n      onClick: handleLastPageButtonClick,\n      disabled: page >= Math.ceil(count / rowsPerPage) - 1,\n      \"aria-label\": \"last page\",\n      children: theme.direction === 'rtl' ? /*#__PURE__*/_jsxDEV(FirstPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(LastPageIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n};\n\nfunction createData(name, calories, fat) {\n  return {\n    name,\n    calories,\n    fat\n  };\n}\n\nuseSelector(state = state.user);\nuseEffect({}, []); // const rows = [\n//   createData('Cupcake', 305, 3.7),\n//   createData('Donut', 452, 25.0),\n//   createData('Eclair', 262, 16.0),\n//   createData('Frozen yoghurt', 159, 6.0),\n//   createData('Gingerbread', 356, 16.0),\n//   createData('Honeycomb', 408, 3.2),\n//   createData('Ice cream sandwich', 237, 9.0),\n//   createData('Jelly Bean', 375, 0.0),\n//   createData('KitKat', 518, 26.0),\n//   createData('Lollipop', 392, 0.2),\n//   createData('Marshmallow', 318, 0),\n//   createData('Nougat', 360, 19.0),\n//   createData('Oreo', 437, 18.0),\n// ].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nexport default function UserList() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const emptyRows = page > 0 ? Math.max(0, (1 + page) * rowsPerPage - state.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-list\",\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 500\n        },\n        \"aria-label\": \"custom pagination table\",\n        children: [/*#__PURE__*/_jsxDEV(TableBody, {\n          children: [(rowsPerPage > 0 ? state.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) : state).map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: state.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: 160\n              },\n              align: \"right\",\n              children: state.calories\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              style: {\n                width: 160\n              },\n              align: \"right\",\n              children: state.fat\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)), emptyRows > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n            style: {\n              height: 53 * emptyRows\n            },\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: 6\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(TableFooter, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: [5, 10, 25, {\n                label: 'All',\n                value: -1\n              }],\n              colSpan: 3,\n              count: state.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              SelectProps: {\n                inputProps: {\n                  'aria-label': 'rows per page'\n                },\n                native: true\n              },\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage,\n              ActionsComponent: TablePaginationActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/seosuwan/Desktop/team/jarviis-msa-front-for-merge/src/features/user/components/UserList.js"],"names":["React","useEffect","PropTypes","useTheme","Box","Table","TableBody","TableCell","TableContainer","TableFooter","TablePagination","TableRow","Paper","IconButton","FirstPageIcon","KeyboardArrowLeft","KeyboardArrowRight","LastPageIcon","useSelector","TablePaginationActions","props","theme","count","page","rowsPerPage","onPageChange","handleFirstPageButtonClick","event","handleBackButtonClick","handleNextButtonClick","handleLastPageButtonClick","Math","max","ceil","flexShrink","ml","direction","propTypes","number","isRequired","func","createData","name","calories","fat","state","user","UserList","setPage","useState","setRowsPerPage","emptyRows","length","handleChangePage","newPage","handleChangeRowsPerPage","parseInt","target","value","minWidth","slice","map","row","width","height","label","inputProps","native"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { useEffect} from \"react\"\nimport PropTypes from 'prop-types';\nimport { useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableFooter from '@mui/material/TableFooter';\nimport TablePagination from '@mui/material/TablePagination';\nimport TableRow from '@mui/material/TableRow';\nimport Paper from '@mui/material/Paper';\nimport IconButton from '@mui/material/IconButton';\nimport FirstPageIcon from '@mui/icons-material/FirstPage';\nimport KeyboardArrowLeft from '@mui/icons-material/KeyboardArrowLeft';\nimport KeyboardArrowRight from '@mui/icons-material/KeyboardArrowRight';\nimport LastPageIcon from '@mui/icons-material/LastPage';\nimport 'features/user/style/UserList.scss'\nimport { useSelector } from 'react-redux';\n\nfunction TablePaginationActions(props) {\n  const theme = useTheme();\n  const { count, page, rowsPerPage, onPageChange } = props;\n\n  const handleFirstPageButtonClick = (event) => {\n    onPageChange(event, 0);\n  };\n\n  const handleBackButtonClick = (event) => {\n    onPageChange(event, page - 1);\n  };\n\n  const handleNextButtonClick = (event) => {\n    onPageChange(event, page + 1);\n  };\n\n  const handleLastPageButtonClick = (event) => {\n    onPageChange(event, Math.max(0, Math.ceil(count / rowsPerPage) - 1));\n  };\n\n  return (\n    \n    <Box sx={{ flexShrink: 0, ml: 2.5 }}>\n      <IconButton\n        onClick={handleFirstPageButtonClick}\n        disabled={page === 0}\n        aria-label=\"first page\"\n      >\n        {theme.direction === 'rtl' ? <LastPageIcon /> : <FirstPageIcon />}\n      </IconButton>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowRight /> : <KeyboardArrowLeft />}\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\"\n      >\n        {theme.direction === 'rtl' ? <KeyboardArrowLeft /> : <KeyboardArrowRight />}\n      </IconButton>\n      <IconButton\n        onClick={handleLastPageButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"last page\"\n      >\n        {theme.direction === 'rtl' ? <FirstPageIcon /> : <LastPageIcon />}\n      </IconButton>\n    </Box>\n   \n  );\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n};\n\nfunction createData(name, calories, fat) {\n  return { name, calories, fat };\n}\nuseSelector(state = state.user)\n\nuseEffect({\n  \n\n},[])\n\n// const rows = [\n//   createData('Cupcake', 305, 3.7),\n//   createData('Donut', 452, 25.0),\n//   createData('Eclair', 262, 16.0),\n//   createData('Frozen yoghurt', 159, 6.0),\n//   createData('Gingerbread', 356, 16.0),\n//   createData('Honeycomb', 408, 3.2),\n//   createData('Ice cream sandwich', 237, 9.0),\n//   createData('Jelly Bean', 375, 0.0),\n//   createData('KitKat', 518, 26.0),\n//   createData('Lollipop', 392, 0.2),\n//   createData('Marshmallow', 318, 0),\n//   createData('Nougat', 360, 19.0),\n//   createData('Oreo', 437, 18.0),\n// ].sort((a, b) => (a.calories < b.calories ? -1 : 1));\n\nexport default function UserList() {\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const emptyRows =\n    page > 0 ? Math.max(0, (1 + page) * rowsPerPage - state.length) : 0;\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  return (\n    <div className='user-list'>\n    <TableContainer component={Paper}>\n      <Table sx={{ minWidth: 500 }} aria-label=\"custom pagination table\">\n        <TableBody>\n          {(rowsPerPage > 0\n            ? state.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n            : state\n          ).map((row) => (\n            <TableRow key={row.name}>\n              <TableCell component=\"th\" scope=\"row\">\n                {state.name}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"right\">\n                {state.calories}\n              </TableCell>\n              <TableCell style={{ width: 160 }} align=\"right\">\n                {state.fat}\n              </TableCell>\n            </TableRow>\n          ))}\n\n          {emptyRows > 0 && (\n            <TableRow style={{ height: 53 * emptyRows }}>\n              <TableCell colSpan={6} />\n            </TableRow>\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={state.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: {\n                  'aria-label': 'rows per page',\n                },\n                native: true,\n              }}\n              onPageChange={handleChangePage}\n              onRowsPerPageChange={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}