{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis\\\\jarviis-msa-front-for-merge\\\\src\\\\features\\\\todo\\\\components\\\\TaskList.js\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport { CompleteRequest, deleteTaskFailure, deleteTaskRequest } from \"../reducer/taskSlice\";\nimport { historyRemoveFromTodoRequest, historyRemoveRequest, historyRequest } from \"features/history/reducer/historySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskList = ({\n  data\n}) => {\n  const [counter, setCounter] = useState(0);\n  const [check, setCheck] = useState(data.completion);\n  const dispatch = useDispatch(); // function handleSubmit(data){\n  //   dispatch(deleteTaskRequest({id:data.id})); \n  //   location.reload()\n  // }    \n  // function success(){\n  //   const test22 = useSelector(state => state.history.historyTodo)\n  //   console.log(`success function :: ${JSON.stringify(test22)}`)\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-cb\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"todo-0\",\n      type: \"checkbox\",\n      defaultChecked: check,\n      onChange: () => {\n        dispatch(CompleteRequest({\n          id: data.id,\n          completion: !check\n        })); // handleSubmit()\n\n        if (check == false) {\n          dispatch(historyRequest({\n            log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n            location: data.location == null ? \"\" : data.location,\n            address: \"\",\n            weather: \"\",\n            log_type: \"todo\",\n            contents: data.title,\n            event_id: data.id,\n            user_id: 1\n          }));\n        } else {\n          dispatch(historyRemoveFromTodoRequest(data.id));\n        }\n\n        setCheck(!check);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-label\",\n      htmlFor: \"todo-0\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }, this), check ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"rotate-center\",\n        style: {\n          width: '6%',\n          visibility: \"visible\",\n          float: \"right\"\n        },\n        src: require(\"features/todo/images/feedback.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => {\n          await dispatch(deleteTaskRequest({\n            id: data.id\n          }));\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => {\n          await dispatch(deleteTaskRequest({\n            id: data.id\n          }));\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: '6%',\n          visibility: \"hidden\",\n          float: \"right\"\n        },\n        src: require(\"features/todo/images/feedback.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object\n};\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis/jarviis-msa-front-for-merge/src/features/todo/components/TaskList.js"],"names":["PropTypes","React","useEffect","useState","useDispatch","useSelector","Button","CompleteRequest","deleteTaskFailure","deleteTaskRequest","historyRemoveFromTodoRequest","historyRemoveRequest","historyRequest","TaskList","data","counter","setCounter","check","setCheck","completion","dispatch","id","log_date","Date","toISOString","location","address","weather","log_type","contents","title","event_id","user_id","width","visibility","float","require","default","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useState }  from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport Button from '@mui/material/Button';\nimport { CompleteRequest, deleteTaskFailure, deleteTaskRequest } from \"../reducer/taskSlice\";\nimport { historyRemoveFromTodoRequest, historyRemoveRequest, historyRequest } from \"features/history/reducer/historySlice\";\n\nconst TaskList = ({ data }) => {\n  const [counter, setCounter] = useState(0)\n\n  const [check, setCheck] = useState(data.completion)\n  const dispatch = useDispatch()\n  // function handleSubmit(data){\n  //   dispatch(deleteTaskRequest({id:data.id})); \n  //   location.reload()\n  // }    \n  \n  // function success(){\n  //   const test22 = useSelector(state => state.history.historyTodo)\n  //   console.log(`success function :: ${JSON.stringify(test22)}`)\n\n  // }\n  return (\n    <div className=\"c-cb\">\n    <input  id=\"todo-0\" type=\"checkbox\" defaultChecked={check} onChange={\n      ()=>{\n      dispatch(CompleteRequest({id: data.id, completion: !check}))\n      // handleSubmit()\n      if (check == false){\n        dispatch(historyRequest(\n            {\n              log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n              location: data.location==null? \"\" : data.location,\n              address: \"\",\n              weather: \"\",\n              log_type: \"todo\",\n              contents: data.title,\n              event_id: data.id,\n              user_id: 1\n            }\n          ))\n      }\n      else{\n        dispatch(historyRemoveFromTodoRequest(data.id))}\n        setCheck(!check)\n    }\n    }/>\n    <label className=\"todo-label\" htmlFor=\"todo-0\">\n      {data.title}\n    </label>\n    {check ? <><img class=\"rotate-center\"\n              style={{ width: '6%', visibility: \"visible\", float: \"right\" }}\n              src={require(\"features/todo/images/feedback.png\").default} />\n              <Button variant=\"outlined\" onClick={async()=>{await dispatch(deleteTaskRequest({id:data.id})) }} >삭제</Button>\n            </>\n    :<>\n    <Button variant=\"outlined\" onClick={async()=>{await dispatch(deleteTaskRequest({id:data.id})) }} >삭제</Button>\n    <img \n    style={{ width: '6%', visibility: \"hidden\", float: \"right\" }}\n    src={require(\"features/todo/images/feedback.png\").default}\n    /></>}\n  </div>   \n  );\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}