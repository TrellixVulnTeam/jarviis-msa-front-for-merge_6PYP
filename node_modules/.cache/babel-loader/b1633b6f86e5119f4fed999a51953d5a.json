{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis\\\\jarviis-msa-front-for-merge\\\\src\\\\features\\\\todo\\\\components\\\\TaskList.js\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport { CompleteRequest, deleteTaskFailure, deleteTaskRequest } from \"../reducer/taskSlice\";\nimport { historyRemoveRequest, historyRequest } from \"features/history/reducer/historySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskList = ({\n  data\n}) => {\n  const [counter, setCounter] = useState(0); // console.log(`task data check ${JSON.stringify(data)}`)\n\n  const [check, setCheck] = useState(data.completion);\n  const [logId, setLogId] = useState({});\n  const history = useSelector(state => state.history.historyTodo);\n\n  if (history != null && counter < 1) {\n    // alert('# 7 component - historyRequest'),\n    setCounter(counter + 1);\n    setLogId(history.data);\n    console.log(`성공 :: ${JSON.stringify(logId)}`);\n  }\n\n  console.log(`주현 히스토리 :: ${JSON.stringify(logId.id)}`);\n  const dispatch = useDispatch(); // console.log(check)\n  // function handleSubmit(data){\n  //   dispatch(deleteTaskRequest({id:data.id})); \n  //   location.reload()\n  // }\n  // console.log(`check 확인 : ${check}`)\n  // console.log(`data 확인 : ${JSON.stringify(data)}`)\n\n  const handleSubmit = () => {//   !check ? dispatch(historyRequest(\n    //   {\n    //     log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n    //     location: data.location,\n    //     address: \"\",\n    //     weather: \"\",\n    //     log_type: \"todo\",\n    //     contents: data.title,\n    //     user_id: 1\n    //   }\n    // )) : \n    // dispatch(historyRemoveRequest(logId.id))\n  };\n\n  function success() {\n    const test22 = useSelector(state => state.history.historyTodo);\n    console.log(`success function :: ${JSON.stringify(test22)}`);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-cb\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"todo-0\",\n      type: \"checkbox\",\n      defaultChecked: check,\n      onChange: () => {\n        dispatch(CompleteRequest({\n          id: data.id,\n          completion: !check\n        })); // handleSubmit()\n\n        if (check == false) {\n          dispatch(historyRequest({\n            log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n            location: data.location == null ? \"\" : data.location,\n            address: \"\",\n            weather: \"\",\n            log_type: \"todo\",\n            contents: data.title,\n            task_id: data.id,\n            user_id: 1\n          }));\n          success;\n        } else {\n          dispatch(historyRemoveRequest(history.data.task_id == data.id ? history.data.id : 0));\n        }\n\n        setCheck(!check);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-label\",\n      htmlFor: \"todo-0\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 5\n    }, this), check ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"rotate-center\",\n        style: {\n          width: '6%',\n          visibility: \"visible\",\n          float: \"right\"\n        },\n        src: require(\"features/todo/images/feedback.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => {\n          await dispatch(deleteTaskRequest({\n            id: data.id\n          }));\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => {\n          await dispatch(deleteTaskRequest({\n            id: data.id\n          }));\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: '6%',\n          visibility: \"hidden\",\n          float: \"right\"\n        },\n        src: require(\"features/todo/images/feedback.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object\n};\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis/jarviis-msa-front-for-merge/src/features/todo/components/TaskList.js"],"names":["PropTypes","React","useEffect","useState","useDispatch","useSelector","Button","CompleteRequest","deleteTaskFailure","deleteTaskRequest","historyRemoveRequest","historyRequest","TaskList","data","counter","setCounter","check","setCheck","completion","logId","setLogId","history","state","historyTodo","console","log","JSON","stringify","id","dispatch","handleSubmit","success","test22","log_date","Date","toISOString","location","address","weather","log_type","contents","title","task_id","user_id","width","visibility","float","require","default","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useState }  from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport Button from '@mui/material/Button';\nimport { CompleteRequest, deleteTaskFailure, deleteTaskRequest } from \"../reducer/taskSlice\";\nimport { historyRemoveRequest, historyRequest } from \"features/history/reducer/historySlice\";\n\nconst TaskList = ({ data }) => {\n  const [counter, setCounter] = useState(0)\n\n  // console.log(`task data check ${JSON.stringify(data)}`)\n  const [check, setCheck] = useState(data.completion)\n  const [logId, setLogId] = useState({})\n  const history = useSelector(state => state.history.historyTodo)\n  if (history != null && counter < 1) {\n    // alert('# 7 component - historyRequest'),\n    setCounter(counter + 1)\n    setLogId(history.data)\n    console.log(`성공 :: ${JSON.stringify(logId)}`)\n  }\n  console.log(`주현 히스토리 :: ${JSON.stringify(logId.id)}`)\n  const dispatch = useDispatch()\n  // console.log(check)\n  // function handleSubmit(data){\n  //   dispatch(deleteTaskRequest({id:data.id})); \n  //   location.reload()\n  // }\n  // console.log(`check 확인 : ${check}`)\n  // console.log(`data 확인 : ${JSON.stringify(data)}`)\n  const handleSubmit = () => {\n    //   !check ? dispatch(historyRequest(\n    //   {\n    //     log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n    //     location: data.location,\n    //     address: \"\",\n    //     weather: \"\",\n    //     log_type: \"todo\",\n    //     contents: data.title,\n    //     user_id: 1\n    //   }\n    // )) : \n    // dispatch(historyRemoveRequest(logId.id))\n    \n  }\n  function success(){\n    const test22 = useSelector(state => state.history.historyTodo)\n    console.log(`success function :: ${JSON.stringify(test22)}`)\n\n  }\n  return (\n    <div className=\"c-cb\">\n    <input  id=\"todo-0\" type=\"checkbox\" defaultChecked={check} onChange={()=>{\n      dispatch(CompleteRequest({id: data.id, completion: !check}))\n      // handleSubmit()\n      if(check == false){\n        dispatch(historyRequest(\n            {\n              log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n              location: data.location==null? \"\" : data.location,\n              address: \"\",\n              weather: \"\",\n              log_type: \"todo\",\n              contents: data.title,\n              task_id: data.id,\n              user_id: 1\n            }\n          ))\n          success\n      }\n      else{\n        dispatch(historyRemoveRequest(\n          history.data.task_id == data.id ?\n          history.data.id\n          : 0))\n      }\n      setCheck(!check)\n      \n    }}/>\n    <label className=\"todo-label\" htmlFor=\"todo-0\">\n      {data.title}\n    </label>\n    {check ? <><img class=\"rotate-center\"\n              style={{ width: '6%', visibility: \"visible\", float: \"right\" }}\n              src={require(\"features/todo/images/feedback.png\").default} />\n              <Button variant=\"outlined\" onClick={async()=>{await dispatch(deleteTaskRequest({id:data.id})) }} >삭제</Button>\n            </>\n    :<>\n    <Button variant=\"outlined\" onClick={async()=>{await dispatch(deleteTaskRequest({id:data.id})) }} >삭제</Button>\n    <img \n    style={{ width: '6%', visibility: \"hidden\", float: \"right\" }}\n    src={require(\"features/todo/images/feedback.png\").default}\n    /></>}\n  </div>   \n  );\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}