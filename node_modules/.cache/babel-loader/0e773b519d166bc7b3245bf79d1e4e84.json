{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  gardenLoading: false,\n  gardenData: null,\n  error: null\n};\nconst GardenSlice = createSlice({\n  name: \"gardens\",\n  initialState,\n  reducers: {\n    flowerListRequest(state, _action) {\n      // alert(\"Slice!\")\n      state.gardenLoading = true;\n      state.error = null;\n    },\n\n    flowerListSuccess(state, action) {\n      // alert(\"Slice SUCCESS!\")\n      // alert(JSON.stringify(action.payload))\n      state.gardenLoading = false;\n      state.gardenData = action.payload;\n    },\n\n    flowerListFailure(state, action) {\n      alert(\"Slice FAIL!\");\n      state.gardenLoading = true;\n      state.error = action.payload;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    garden: GardenSlice.reducer\n  }\n});\nconst {\n  reducer,\n  actions\n} = GardenSlice;\nexport const {\n  flowerListRequest,\n  flowerListSuccess,\n  flowerListFailure\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/자비스 주현/jarviis_docker/jarviis_docker/front/src/features/review/reducer/gardenSlice.ts"],"names":["configureStore","createSlice","initialState","gardenLoading","gardenData","error","GardenSlice","name","reducers","flowerListRequest","state","_action","flowerListSuccess","action","payload","flowerListFailure","alert","store","reducer","garden","actions"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,WAAzB,QAA2D,kBAA3D;AA+BA,MAAMC,YAAyB,GAAG;AAC9BC,EAAAA,aAAa,EAAE,KADe;AAE9BC,EAAAA,UAAU,EAAE,IAFkB;AAG9BC,EAAAA,KAAK,EAAE;AAHuB,CAAlC;AAMA,MAAMC,WAAW,GAAGL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,SADsB;AAE5BL,EAAAA,YAF4B;AAG5BM,EAAAA,QAAQ,EAAE;AACNC,IAAAA,iBAAiB,CAACC,KAAD,EAAqBC,OAArB,EAA8D;AAC3E;AACAD,MAAAA,KAAK,CAACP,aAAN,GAAsB,IAAtB;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAc,IAAd;AACH,KALK;;AAMNO,IAAAA,iBAAiB,CAACF,KAAD,EAAqBG,MAArB,EAA+D;AAC5E;AACA;AACAH,MAAAA,KAAK,CAACP,aAAN,GAAsB,KAAtB;AACAO,MAAAA,KAAK,CAACN,UAAN,GAAmBS,MAAM,CAACC,OAA1B;AACH,KAXK;;AAYNC,IAAAA,iBAAiB,CAACL,KAAD,EAAqBG,MAArB,EAA4D;AACzEG,MAAAA,KAAK,CAAC,aAAD,CAAL;AACAN,MAAAA,KAAK,CAACP,aAAN,GAAsB,IAAtB;AACAO,MAAAA,KAAK,CAACL,KAAN,GAAcQ,MAAM,CAACC,OAArB;AACH;;AAhBK;AAHkB,CAAD,CAA/B;AAwBA,MAAMG,KAAK,GAAGjB,cAAc,CAAC;AACzBkB,EAAAA,OAAO,EAAE;AACLC,IAAAA,MAAM,EAAEb,WAAW,CAACY;AADf;AADgB,CAAD,CAA5B;AAOA,MAAM;AAAEA,EAAAA,OAAF;AAAWE,EAAAA;AAAX,IAAuBd,WAA7B;AAEA,OAAO,MAAM;AACTG,EAAAA,iBADS;AAETG,EAAAA,iBAFS;AAGTG,EAAAA;AAHS,IAITK,OAJG;AAMP,eAAeF,OAAf","sourcesContent":["import { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n\nexport interface FlowerDataPayload {\n    data: {\n        id: number;\n        create_date: string;\n        update_date: string;\n        title: string;\n        grade: string;\n        step: string;\n        color: string;\n        log_id: string;\n        event_id: string;\n        user_id: number;\n\n    }\n}\nexport interface FlowerIdPayload {\n    user_id: number\n}\n\nexport interface GardenState {\n    gardenLoading: boolean;\n    gardenData: any;\n    error: any;\n}\n\nexport interface ParamType {\n    id: number;\n}\nconst initialState: GardenState = {\n    gardenLoading: false,\n    gardenData: null,\n    error: null,\n};\n\nconst GardenSlice = createSlice({\n    name: \"gardens\",\n    initialState,\n    reducers: {\n        flowerListRequest(state: GardenState, _action: PayloadAction<FlowerIdPayload>) {\n            // alert(\"Slice!\")\n            state.gardenLoading = true;\n            state.error = null;\n        },\n        flowerListSuccess(state: GardenState, action: PayloadAction<FlowerDataPayload>) {\n            // alert(\"Slice SUCCESS!\")\n            // alert(JSON.stringify(action.payload))\n            state.gardenLoading = false;\n            state.gardenData = action.payload;\n        },\n        flowerListFailure(state: GardenState, action: PayloadAction<{ error: any }>) {\n            alert(\"Slice FAIL!\")\n            state.gardenLoading = true;\n            state.error = action.payload;\n        },\n    }\n})\n\n\nconst store = configureStore({\n    reducer: {\n        garden: GardenSlice.reducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nconst { reducer, actions } = GardenSlice;\n\nexport const {\n    flowerListRequest,\n    flowerListSuccess,\n    flowerListFailure\n} = actions;\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}