{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis\\\\jarviis-msa-front-for-merge\\\\src\\\\features\\\\todo\\\\components\\\\TaskList.js\";\nimport PropTypes from \"prop-types\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from 'react-redux';\nimport Button from '@mui/material/Button';\nimport { CompleteRequest, deleteTaskFailure, deleteTaskRequest } from \"../reducer/taskSlice\";\nimport { historyRequest } from \"features/history/reducer/historySlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TaskList = ({\n  data\n}) => {\n  console.log(`task data check ${JSON.stringify(data)}`);\n  const [check, setCheck] = useState([data.completion]);\n  const [taskId, setTaskId] = useState({\n    task_id: data.id,\n    log_id: 0\n  });\n  const [test, setTest] = useState({});\n  const history = useSelector(state => state.history.historyData);\n  setTest(history);\n  console.log(`주현 히스토리 :: ${JSON.stringify(history)}`);\n  const dispatch = useDispatch();\n  console.log(check); // function handleSubmit(data){\n  //   dispatch(deleteTaskRequest({id:data.id})); \n  //   location.reload()\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"c-cb\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"todo-0\",\n      type: \"checkbox\",\n      defaultChecked: check,\n      onChange: () => {\n        dispatch(CompleteRequest({\n          id: data.id,\n          completion: !check\n        }));\n        setCheck(!check);\n        dispatch(historyRequest({\n          log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n          location: data.location,\n          address: \"\",\n          weather: \"\",\n          log_type: \"todo\",\n          contents: data.title,\n          user_id: 1\n        }));\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"todo-label\",\n      htmlFor: \"todo-0\",\n      children: data.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }, this), check ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        class: \"rotate-center\",\n        style: {\n          width: '6%',\n          visibility: \"visible\",\n          float: \"right\"\n        },\n        src: require(\"features/todo/images/feedback.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => {// dispatch(historyRequest(\n          //   {\n          //     log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n          //     location: data.location,\n          //     address: \"\",\n          //     weather: \"\",\n          //     log_type: \"todo\",\n          //     contents: data.title,\n          //     user_id: 1\n          //   }\n          // ))\n        },\n        children: \"\\uD788\\uC2A4\\uD1A0\\uB9AC\\uC5D0\\uB3C4 \\uCD94\\uAC00\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => {\n          await dispatch(deleteTaskRequest({\n            id: data.id\n          }));\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: async () => {\n          await dispatch(deleteTaskRequest({\n            id: data.id\n          }));\n        },\n        children: \"\\uC0AD\\uC81C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        style: {\n          width: '6%',\n          visibility: \"hidden\",\n          float: \"right\"\n        },\n        src: require(\"features/todo/images/feedback.png\").default\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object\n};\nexport default TaskList;","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis/jarviis-msa-front-for-merge/src/features/todo/components/TaskList.js"],"names":["PropTypes","React","useEffect","useState","useDispatch","useSelector","Button","CompleteRequest","deleteTaskFailure","deleteTaskRequest","historyRequest","TaskList","data","console","log","JSON","stringify","check","setCheck","completion","taskId","setTaskId","task_id","id","log_id","test","setTest","history","state","historyData","dispatch","log_date","Date","toISOString","location","address","weather","log_type","contents","title","user_id","width","visibility","float","require","default","propTypes","object"],"mappings":"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","sourcesContent":["import PropTypes from \"prop-types\";\nimport React, { useEffect, useState }  from \"react\";\nimport { useDispatch, useSelector } from 'react-redux'\nimport Button from '@mui/material/Button';\nimport { CompleteRequest, deleteTaskFailure, deleteTaskRequest } from \"../reducer/taskSlice\";\nimport { historyRequest } from \"features/history/reducer/historySlice\";\n\nconst TaskList = ({ data }) => {\n  console.log(`task data check ${JSON.stringify(data)}`)\n  const [check, setCheck] = useState([data.completion])\n\n  const [taskId, setTaskId] = useState(\n    {\n      task_id : data.id,\n      log_id : 0\n    }\n  )\n  const [test, setTest] = useState({})\n  const history = useSelector(state => state.history.historyData)\n  setTest(history)\n  console.log(`주현 히스토리 :: ${JSON.stringify(history)}`)\n  const dispatch = useDispatch()\n  console.log(check)\n  // function handleSubmit(data){\n  //   dispatch(deleteTaskRequest({id:data.id})); \n  //   location.reload()\n  // }\n\n  return (\n    <div className=\"c-cb\">\n    <input  id=\"todo-0\" type=\"checkbox\" defaultChecked={check} onChange={()=>{\n      dispatch(CompleteRequest({id: data.id, completion: !check}))\n      setCheck(!check)\n      dispatch(historyRequest(\n        {\n          log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n          location: data.location,\n          address: \"\",\n          weather: \"\",\n          log_type: \"todo\",\n          contents: data.title,\n          user_id: 1\n        }\n      ))\n    }}/>\n    <label className=\"todo-label\" htmlFor=\"todo-0\">\n      {data.title}\n    </label>\n    {check ? <><img class=\"rotate-center\"\n              style={{ width: '6%', visibility: \"visible\", float: \"right\" }}\n              src={require(\"features/todo/images/feedback.png\").default} />\n              <Button variant=\"outlined\" \n              onClick={() => {\n                // dispatch(historyRequest(\n                //   {\n                //     log_date: new Date().toISOString(\"yyyy-mm-dd hh:MM:ss\"),\n                //     location: data.location,\n                //     address: \"\",\n                //     weather: \"\",\n                //     log_type: \"todo\",\n                //     contents: data.title,\n                //     user_id: 1\n                //   }\n                // ))\n              }}>히스토리에도 추가하기</Button>\n              <Button variant=\"outlined\" onClick={async()=>{await dispatch(deleteTaskRequest({id:data.id})) }} >삭제</Button>\n            </>\n    :<>\n    <Button variant=\"outlined\" onClick={async()=>{await dispatch(deleteTaskRequest({id:data.id})) }} >삭제</Button>\n    <img \n    style={{ width: '6%', visibility: \"hidden\", float: \"right\" }}\n    src={require(\"features/todo/images/feedback.png\").default}\n    /></>}\n  </div>   \n  );\n};\n\nTaskList.propTypes = {\n  data: PropTypes.object,\n};\n\nexport default TaskList;\n"]},"metadata":{},"sourceType":"module"}