{"ast":null,"code":"import { call, put, takeLatest } from \"redux-saga/effects\";\nimport { calendarAPI } from 'features/calendar';\nimport { addEventFailure, addEventRequest, addEventSuccess, deleteEventFailure, deleteEventRequest, deleteEventSuccess, eventFailure, eventRequest, eventSuccess } from \"../reducer/calendarSlice\";\n\nfunction* eventList(action) {\n  try {\n    const result = yield call(calendarAPI.eventListAPI, action.payload);\n    console.log(`eventdatapayload - 사가 ${result}`);\n    yield put(eventSuccess(result));\n  } catch (error) {\n    yield put(eventFailure(error));\n  }\n\n  ;\n}\n\nfunction* addEvent(action) {\n  try {\n    const result = yield call(calendarAPI.addTaskAPI, action.payload);\n    yield put(addEventSuccess(result));\n  } catch (error) {\n    yield put(addEventFailure(error));\n  }\n\n  ;\n}\n\nfunction* deleteEvent(action) {\n  try {\n    const result = yield call(calendarAPI.deleteTaskAPI, action.payload);\n    yield put(deleteEventSuccess(result));\n  } catch (error) {\n    yield put(deleteEventFailure(error));\n  }\n\n  ;\n}\n\nexport function* watchEventList() {\n  yield takeLatest(eventRequest.type, eventList);\n}\nexport function* watchAddEvent() {\n  yield takeLatest(addEventRequest.type, addEvent);\n}\nexport function* watchDeleteEvent() {\n  yield takeLatest(deleteEventRequest.type, deleteEvent);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis/jarviis-msa-front-for-merge/src/features/calendar/module/calendarSaga.ts"],"names":["call","put","takeLatest","calendarAPI","addEventFailure","addEventRequest","addEventSuccess","deleteEventFailure","deleteEventRequest","deleteEventSuccess","eventFailure","eventRequest","eventSuccess","eventList","action","result","eventListAPI","payload","console","log","error","addEvent","addTaskAPI","deleteEvent","deleteTaskAPI","watchEventList","type","watchAddEvent","watchDeleteEvent"],"mappings":"AACA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,UAApB,QAAsC,oBAAtC;AACA,SAASC,WAAT,QAA4B,mBAA5B;AACA,SAASC,eAAT,EAA2CC,eAA3C,EAA4DC,eAA5D,EAA6EC,kBAA7E,EAAiGC,kBAAjG,EAAqHC,kBAArH,EAA2JC,YAA3J,EAAyKC,YAAzK,EAAuLC,YAAvL,QAAuO,0BAAvO;;AAIA,UAAUC,SAAV,CAAoBC,MAApB,EAAyD;AACrD,MAAI;AACA,UAAMC,MAAwB,GAAG,MAAMf,IAAI,CACvCG,WAAW,CAACa,YAD2B,EAEvCF,MAAM,CAACG,OAFgC,CAA3C;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAa,yBAAwBJ,MAAO,EAA5C;AACA,UAAMd,GAAG,CAACW,YAAY,CAACG,MAAD,CAAb,CAAT;AACH,GAPD,CAQA,OAAOK,KAAP,EAAiB;AACb,UAAMnB,GAAG,CAACS,YAAY,CAACU,KAAD,CAAb,CAAT;AACH;;AAAA;AACJ;;AAGD,UAAUC,QAAV,CAAmBP,MAAnB,EAA0D;AACtD,MAAI;AACA,UAAMC,MAAuB,GAAG,MAAMf,IAAI,CACtCG,WAAW,CAACmB,UAD0B,EAEtCR,MAAM,CAACG,OAF+B,CAA1C;AAIA,UAAMhB,GAAG,CAACK,eAAe,CAACS,MAAD,CAAhB,CAAT;AACH,GAND,CAOA,OAAOK,KAAP,EAAiB;AACb,UAAMnB,GAAG,CAACG,eAAe,CAACgB,KAAD,CAAhB,CAAT;AACH;;AAAA;AACJ;;AAED,UAAUG,WAAV,CAAsBT,MAAtB,EAAyD;AACrD,MAAI;AACA,UAAMC,MAAmB,GAAG,MAAMf,IAAI,CAClCG,WAAW,CAACqB,aADsB,EAElCV,MAAM,CAACG,OAF2B,CAAtC;AAIA,UAAMhB,GAAG,CAACQ,kBAAkB,CAACM,MAAD,CAAnB,CAAT;AACH,GAND,CAOA,OAAOK,KAAP,EAAiB;AACb,UAAMnB,GAAG,CAACM,kBAAkB,CAACa,KAAD,CAAnB,CAAT;AACH;;AAAA;AACJ;;AAID,OAAO,UAAUK,cAAV,GAA0B;AAC7B,QAAMvB,UAAU,CAACS,YAAY,CAACe,IAAd,EAAoBb,SAApB,CAAhB;AACH;AAED,OAAO,UAAUc,aAAV,GAAyB;AAC5B,QAAMzB,UAAU,CAACG,eAAe,CAACqB,IAAjB,EAAuBL,QAAvB,CAAhB;AACH;AAED,OAAO,UAAUO,gBAAV,GAA4B;AAC/B,QAAM1B,UAAU,CAACM,kBAAkB,CAACkB,IAApB,EAA0BH,WAA1B,CAAhB;AACH","sourcesContent":["import { PayloadAction } from \"@reduxjs/toolkit\";\nimport { call, put, takeLatest } from \"redux-saga/effects\";\nimport { calendarAPI } from 'features/calendar';\nimport { addEventFailure, addEventPayload, addEventRequest, addEventSuccess, deleteEventFailure, deleteEventRequest, deleteEventSuccess, eventDataPayload, eventFailure, eventRequest, eventSuccess, idParamType, UserParamType } from \"../reducer/calendarSlice\";\nimport { deleteTaskSuccess } from \"features/todo/reducer/taskSlice\";\n\n\nfunction* eventList(action: PayloadAction<UserParamType>){\n    try {\n        const result: eventDataPayload = yield call(\n            calendarAPI.eventListAPI,\n            action.payload\n        );\n        console.log(`eventdatapayload - 사가 ${result}`)\n        yield put(eventSuccess(result));\n    }\n    catch (error:any){\n        yield put(eventFailure(error))\n    };\n}\n\n\nfunction* addEvent(action: PayloadAction<addEventPayload>){\n    try {\n        const result: addEventPayload = yield call(\n            calendarAPI.addTaskAPI,\n            action.payload\n        );\n        yield put(addEventSuccess(result));\n    }\n    catch (error:any){\n        yield put(addEventFailure(error))\n    };\n}\n\nfunction* deleteEvent(action: PayloadAction<idParamType>){\n    try {\n        const result: idParamType = yield call(\n            calendarAPI.deleteTaskAPI,\n            action.payload\n        );\n        yield put(deleteEventSuccess(result));\n    }\n    catch (error:any){\n        yield put(deleteEventFailure(error))\n    };\n}\n\n\n\nexport function* watchEventList(){\n    yield takeLatest(eventRequest.type, eventList);\n}\n\nexport function* watchAddEvent(){\n    yield takeLatest(addEventRequest.type, addEvent);\n}\n\nexport function* watchDeleteEvent(){\n    yield takeLatest(deleteEventRequest.type, deleteEvent);\n}\n"]},"metadata":{},"sourceType":"module"}