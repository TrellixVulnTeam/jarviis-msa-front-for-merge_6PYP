{"ast":null,"code":"import { configureStore, combineReducers, // redux의 Reducer 의 집합과 같다.\ngetDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger';\nimport user from 'features/user/reducer/userSlice';\nimport history from 'features/history/reducer/historySlice';\nimport garden from 'features/review/reducer/gardenSlice';\nimport diary from 'features/diary/reducer/diarySlice';\nimport chat from 'features/chatbot/reducer/chatSlice';\nexport const rootReducer = combineReducers({\n  user,\n  history,\n  garden,\n  diary,\n  chat\n}); //리듀서에 유저스라는 이름으로있지만 리듀서밖에서는 유저라고부를거야!\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(logger)\n});","map":{"version":3,"sources":["C:/자비스 임시/jarviis_docker/front/src/app/store.js"],"names":["configureStore","combineReducers","getDefaultMiddleware","logger","user","history","garden","diary","chat","rootReducer","store","reducer","middleware","concat"],"mappings":"AAAA,SACEA,cADF,EAEEC,eAFF,EAEmB;AACjBC,oBAHF,QAIO,kBAJP;AAKA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,IAAP,MAAiB,iCAAjB;AACA,OAAOC,OAAP,MAAoB,uCAApB;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,OAAOC,KAAP,MAAkB,mCAAlB;AACA,OAAOC,IAAP,MAAiB,oCAAjB;AAEA,OAAO,MAAMC,WAAW,GAAGR,eAAe,CAAC;AAAEG,EAAAA,IAAF;AAAQC,EAAAA,OAAR;AAAiBC,EAAAA,MAAjB;AAAyBC,EAAAA,KAAzB;AAAgCC,EAAAA;AAAhC,CAAD,CAAnC,C,CAA2E;;AAElF,OAAO,MAAME,KAAK,GAAGV,cAAc,CAAC;AAClCW,EAAAA,OAAO,EAAEF,WADyB;AAElCG,EAAAA,UAAU,EAAGV,oBAAD,IAA0BA,oBAAoB,GAAGW,MAAvB,CAA8BV,MAA9B;AAFJ,CAAD,CAA5B","sourcesContent":["import {\n  configureStore,\n  combineReducers, // redux의 Reducer 의 집합과 같다.\n  getDefaultMiddleware\n} from \"@reduxjs/toolkit\";\nimport logger from 'redux-logger'\nimport user from 'features/user/reducer/userSlice';\nimport history from 'features/history/reducer/historySlice'\nimport garden from 'features/review/reducer/gardenSlice'\nimport diary from 'features/diary/reducer/diarySlice'\nimport chat from 'features/chatbot/reducer/chatSlice'\n\nexport const rootReducer = combineReducers({ user, history, garden, diary, chat}) //리듀서에 유저스라는 이름으로있지만 리듀서밖에서는 유저라고부를거야!\n\nexport const store = configureStore({\n  reducer: rootReducer,\n  middleware: (getDefaultMiddleware) => getDefaultMiddleware().concat(logger),\n});"]},"metadata":{},"sourceType":"module"}