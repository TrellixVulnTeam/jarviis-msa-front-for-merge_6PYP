{"ast":null,"code":"import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  diaryLoading: false,\n  diaryData: null,\n  error: null\n};\nconst DiarySlice = createSlice({\n  name: \"diaries\",\n  initialState,\n  reducers: {\n    diaryFindRequest(state, _action) {\n      // alert(\"Slice!\")\n      state.diaryLoading = true;\n      state.error = null;\n    },\n\n    diaryFindSuccess(state, action) {\n      // alert(\"Slice SUCCESS!\")\n      // alert(`action.payload :: ${JSON.stringify(action.payload)}`)\n      state.diaryLoading = false;\n      state.diaryData = action.payload; // window.localStorage.setItem(\"sessionDiaryDate\", action.payload.data.diary_date)\n      // alert(`결국 diaryData :: ${JSON.stringify(state.diaryData)}`)\n    },\n\n    diaryFindFailure(state, action) {\n      alert(`Slice FAIL! :: ${action.payload}`);\n      state.diaryLoading = true;\n      state.error = action.payload;\n    },\n\n    diaryMemoRequest(state, _action) {\n      // alert(\"Slice!\")\n      state.diaryLoading = true;\n      state.error = null;\n    },\n\n    diaryMemoSuccess(state, action) {\n      alert(\"Slice SUCCESS!\");\n      state.diaryLoading = false;\n      state.diaryData = action.payload;\n      alert(`돌아온 데이터 :: ${action.payload}`);\n      window.location.href = \"../diary/diary\";\n    },\n\n    diaryMemoFailure(state, action) {\n      alert(`Slice FAIL! :: ${action.payload}`);\n      state.diaryLoading = true;\n      state.error = action.payload;\n    },\n\n    diaryCreateRequest(state, _action) {\n      // alert(\"Slice!\")\n      state.diaryLoading = true;\n      state.error = null;\n    },\n\n    diaryCreateSuccess(state, action) {\n      alert(\"Slice SUCCESS!\");\n      state.diaryLoading = false; // state.diaryData = action.payload;\n\n      window.location.href = \"../diary/diary\";\n    },\n\n    diaryCreateFailure(state, action) {\n      alert(`Slice FAIL! :: ${action.payload}`);\n      state.diaryLoading = true;\n      state.error = action.payload;\n    }\n\n  }\n});\nconst store = configureStore({\n  reducer: {\n    diary: DiarySlice.reducer\n  }\n});\nconst {\n  reducer,\n  actions\n} = DiarySlice;\nexport const {\n  diaryFindRequest,\n  diaryFindSuccess,\n  diaryFindFailure,\n  diaryMemoRequest,\n  diaryMemoSuccess,\n  diaryMemoFailure,\n  diaryCreateRequest,\n  diaryCreateSuccess,\n  diaryCreateFailure\n} = actions;\nexport default reducer;","map":{"version":3,"sources":["C:/자비스 주현/jarviis_docker/jarviis_docker/front/src/features/diary/reducer/diarySlice.ts"],"names":["configureStore","createSlice","initialState","diaryLoading","diaryData","error","DiarySlice","name","reducers","diaryFindRequest","state","_action","diaryFindSuccess","action","payload","diaryFindFailure","alert","diaryMemoRequest","diaryMemoSuccess","window","location","href","diaryMemoFailure","diaryCreateRequest","diaryCreateSuccess","diaryCreateFailure","store","reducer","diary","actions"],"mappings":"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","sourcesContent":["import { configureStore, createSlice, PayloadAction } from \"@reduxjs/toolkit\";\n\n\nexport interface DiaryDataPayload {\n    data: {\n        id: number,\n        diary_date: string,\n        weather: string,\n        location: string,\n        drawing: string,\n        contents: string,\n        memo: string,\n        log_id: string,\n        user_id: number,\n        process: string\n    }\n}\nexport interface DiaryFindPayload {\n    user_id: number\n    diary_date: string\n}\nexport interface DiaryMemoPayload {\n    id: number\n    // user_id: number\n    memo: string\n}\n\nexport interface DiaryCreatePayload {\n    user_id: number\n}\n\nexport interface DiaryState {\n    diaryLoading: boolean;\n    diaryData: any;\n    error: any;\n}\n\n\nexport interface ParamType {\n    id: number;\n}\nconst initialState: DiaryState = {\n    diaryLoading: false,\n    diaryData: null,\n    error: null,\n};\n\nconst DiarySlice = createSlice({\n    name: \"diaries\",\n    initialState,\n    reducers: {\n        diaryFindRequest(state: DiaryState, _action: PayloadAction<DiaryFindPayload>) {\n            // alert(\"Slice!\")\n            state.diaryLoading = true;\n            state.error = null;\n        },\n        diaryFindSuccess(state: DiaryState, action: PayloadAction<DiaryDataPayload>) {\n            // alert(\"Slice SUCCESS!\")\n            // alert(`action.payload :: ${JSON.stringify(action.payload)}`)\n            state.diaryLoading = false;\n            state.diaryData = action.payload;\n            // window.localStorage.setItem(\"sessionDiaryDate\", action.payload.data.diary_date)\n            // alert(`결국 diaryData :: ${JSON.stringify(state.diaryData)}`)\n        },\n        diaryFindFailure(state: DiaryState, action: PayloadAction<{ error: any }>) {\n            alert(`Slice FAIL! :: ${action.payload}`)\n            state.diaryLoading = true;\n            state.error = action.payload;\n        },\n        diaryMemoRequest(state: DiaryState, _action: PayloadAction<DiaryMemoPayload>) {\n            // alert(\"Slice!\")\n            state.diaryLoading = true;\n            state.error = null;\n        },\n        diaryMemoSuccess(state: DiaryState, action: PayloadAction<DiaryMemoPayload>) {\n            alert(\"Slice SUCCESS!\")\n            state.diaryLoading = false;\n            state.diaryData = action.payload;\n            alert(`돌아온 데이터 :: ${action.payload}`)\n            window.location.href = \"../diary/diary\"\n        },\n        diaryMemoFailure(state: DiaryState, action: PayloadAction<{ error: any }>) {\n            alert(`Slice FAIL! :: ${action.payload}`)\n            state.diaryLoading = true;\n            state.error = action.payload;\n        },\n        diaryCreateRequest(state: DiaryState, _action: PayloadAction<DiaryCreatePayload>) {\n            // alert(\"Slice!\")\n            state.diaryLoading = true;\n            state.error = null;\n        },\n        diaryCreateSuccess(state: DiaryState, action: PayloadAction<DiaryCreatePayload>) {\n            alert(\"Slice SUCCESS!\")\n            state.diaryLoading = false;\n            // state.diaryData = action.payload;\n            window.location.href = \"../diary/diary\"\n        },\n        diaryCreateFailure(state: DiaryState, action: PayloadAction<{ error: any }>) {\n            alert(`Slice FAIL! :: ${action.payload}`)\n            state.diaryLoading = true;\n            state.error = action.payload;\n        },\n    }\n})\n\n\nconst store = configureStore({\n    reducer: {\n        diary: DiarySlice.reducer,\n    },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nconst { reducer, actions } = DiarySlice;\n\nexport const {\n    diaryFindRequest,\n    diaryFindSuccess,\n    diaryFindFailure,\n    diaryMemoRequest,\n    diaryMemoSuccess,\n    diaryMemoFailure,\n    diaryCreateRequest,\n    diaryCreateSuccess,\n    diaryCreateFailure\n} = actions;\n\nexport default reducer;"]},"metadata":{},"sourceType":"module"}