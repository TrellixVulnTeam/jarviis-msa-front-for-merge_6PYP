{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emma0\\\\workspace\\\\jarviis-msa-front-for-merge\\\\src\\\\features\\\\review\\\\garden\\\\components\\\\Flower.js\";\nimport React, { useEffect, useState } from \"react\";\nimport nor1 from 'features/review/garden/images/normal/1.png';\nimport nor2 from 'features/review/garden/images/normal/2.png';\nimport nor3 from 'features/review/garden/images/normal/3.png';\nimport red4 from 'features/review/garden/images/red/4.png';\nimport red5 from 'features/review/garden/images/red/5.png';\nimport purple4 from 'features/review/garden/images/purple/4.png';\nimport purple5 from 'features/review/garden/images/purple/5.png';\nimport blue4 from 'features/review/garden/images/blue/4.png';\nimport blue5 from 'features/review/garden/images/blue/5.png';\nimport 'features/review/style/gridStyle.scss';\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { flowerListRequest, routineRequest } from \"features/review/reducer/gardenSlice\";\nimport { values } from \"lodash\";\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Flower() {\n  const [counter, setCounter] = useState(0);\n\n  const grow = (grade, color) => {\n    if (grade === \"1\") {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"flower-img\",\n        src: nor1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (grade === \"2\") {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"flower-img\",\n        src: nor2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (grade === \"3\") {\n      return /*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"flower-img\",\n        src: nor3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this);\n    }\n\n    if (grade === \"4\") {\n      if (color === \"RED\") {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flower-img\",\n          src: red4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 25\n        }, this);\n      }\n\n      if (color === \"BLUE\") {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flower-img\",\n          src: blue4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flower-img\",\n          src: purple4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 25\n        }, this);\n      }\n    }\n\n    if (grade === \"5\") {\n      if (color === \"RED\") {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flower-img\",\n          src: red5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this);\n      }\n\n      if (color === \"BLUE\") {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flower-img\",\n          src: blue5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this);\n      } else {\n        return /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"flower-img\",\n          src: purple5\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 25\n        }, this);\n      }\n    } else {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n    }\n  };\n\n  const [flower, setFlower] = useState({\n    data: {\n      \"id\": \"1\",\n      \"create_date\": \"2021-12-13 16:56:53.704187+00:00\",\n      \"update_date\": \"2021-12-13 16:56:53.704187+00:00\",\n      \"title\": \"작업\",\n      \"grade\": \"0\",\n      \"step\": \"1\",\n      \"color\": \"YELLOW\",\n      \"log_id\": \"[15]\",\n      \"event_id\": null,\n      \"user_id\": \"1\"\n    }\n  });\n  useEffect(() => {\n    dispatch(flowerListRequest({\n      user_id: 1\n    }));\n  }, []);\n  const dispatch = useDispatch();\n  const flowers = useSelector(state => state.garden.gardenData);\n\n  if (flowers != null && counter < 1) {\n    setCounter(counter + 1);\n    setFlower(flowers.data);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"submit\",\n      variant: \"text\",\n      onClick: () => {\n        dispatch(routineRequest({\n          user_id: 1\n        }));\n      },\n      children: \"\\uC624\\uB298 \\uB8E8\\uD2F4\\uACFC \\uAF43 \\uB9CC\\uB4E4\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), Object.keys(flower).map((value, index, array) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: flower[value].grade == 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flower-div\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [flower[value].title, \" \\uAF43\\uC744 \\uD0A4\\uC6CC\\uBCF4\\uC790!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: grow(flower[value].grade, flower[value].color)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"GRADE : \", flower[value].grade]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"STEP : \", flower[value].step]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 27\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n}","map":{"version":3,"sources":["C:/Users/emma0/workspace/jarviis-msa-front-for-merge/src/features/review/garden/components/Flower.js"],"names":["React","useEffect","useState","nor1","nor2","nor3","red4","red5","purple4","purple5","blue4","blue5","useDispatch","useSelector","flowerListRequest","routineRequest","values","Button","Flower","counter","setCounter","grow","grade","color","flower","setFlower","data","dispatch","user_id","flowers","state","garden","gardenData","Object","keys","map","value","index","array","title","step"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,IAAP,MAAiB,4CAAjB;AACA,OAAOC,IAAP,MAAiB,4CAAjB;AACA,OAAOC,IAAP,MAAiB,4CAAjB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,IAAP,MAAiB,yCAAjB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,OAAP,MAAoB,4CAApB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAOC,KAAP,MAAkB,0CAAlB;AACA,OAAO,sCAAP;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,iBAAT,EAA4BC,cAA5B,QAAkD,qCAAlD;AACA,SAASC,MAAT,QAAuB,QAAvB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAGA,eAAe,SAASC,MAAT,GAAkB;AAC7B,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,CAAD,CAAtC;;AACA,QAAMmB,IAAI,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkB;AAC3B,QAAID,KAAK,KAAK,GAAd,EAAmB;AACf,0BAAQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEnB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AAAC,QAAImB,KAAK,KAAK,GAAd,EAAmB;AACjB,0BAAQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAElB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AAAC,QAAIkB,KAAK,KAAK,GAAd,EAAmB;AACjB,0BAAQ;AAAK,QAAA,SAAS,EAAC,YAAf;AAA4B,QAAA,GAAG,EAAEjB;AAAjC;AAAA;AAAA;AAAA;AAAA,cAAR;AACH;;AAAC,QAAIiB,KAAK,KAAK,GAAd,EAAmB;AACjB,UAAIC,KAAK,KAAK,KAAd,EAAqB;AACjB,4BAAQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEjB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH;;AACD,UAAIiB,KAAK,KAAK,MAAd,EAAsB;AAClB,4BAAQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEb;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFD,MAGK;AACD,4BAAQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH;AACJ;;AAAC,QAAIc,KAAK,KAAK,GAAd,EAAmB;AACjB,UAAIC,KAAK,KAAK,KAAd,EAAqB;AACjB,4BAAQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEhB;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH;;AACD,UAAIgB,KAAK,KAAK,MAAd,EAAsB;AAClB,4BAAQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEZ;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH,OAFD,MAGK;AACD,4BAAQ;AAAK,UAAA,SAAS,EAAC,YAAf;AAA4B,UAAA,GAAG,EAAEF;AAAjC;AAAA;AAAA;AAAA;AAAA,gBAAR;AACH;AACJ,KAVC,MAUK;AACH,0BAAQ,qCAAR;AACH;AACJ,GA9BD;;AA+BA,QAAM,CAACe,MAAD,EAASC,SAAT,IAAsBvB,QAAQ,CAChC;AACIwB,IAAAA,IAAI,EACJ;AACI,YAAM,GADV;AAEI,qBAAe,kCAFnB;AAGI,qBAAe,kCAHnB;AAII,eAAS,IAJb;AAKI,eAAS,GALb;AAMI,cAAQ,GANZ;AAOI,eAAS,QAPb;AAQI,gBAAU,MARd;AASI,kBAAY,IAThB;AAUI,iBAAW;AAVf;AAFJ,GADgC,CAApC;AAiBAzB,EAAAA,SAAS,CAAC,MAAM;AACZ0B,IAAAA,QAAQ,CAACb,iBAAiB,CAAC;AACvBc,MAAAA,OAAO,EAAE;AADc,KAAD,CAAlB,CAAR;AAGH,GAJQ,EAIN,EAJM,CAAT;AAKA,QAAMD,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAMiB,OAAO,GAAGhB,WAAW,CAACiB,KAAK,IAAIA,KAAK,CAACC,MAAN,CAAaC,UAAvB,CAA3B;;AACA,MAAIH,OAAO,IAAI,IAAX,IAAmBV,OAAO,GAAG,CAAjC,EAAoC;AAChCC,IAAAA,UAAU,CAACD,OAAO,GAAG,CAAX,CAAV;AACAM,IAAAA,SAAS,CAACI,OAAO,CAACH,IAAT,CAAT;AACH;;AACD,sBACI;AAAA,4BACI,QAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,OAAO,EAAC,MAA9B;AACF,MAAA,OAAO,EACL,MAAM;AACJC,QAAAA,QAAQ,CAACZ,cAAc,CAAC;AACtBa,UAAAA,OAAO,EAAG;AADY,SAAD,CAAf,CAAR;AAGD,OAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAaKK,MAAM,CAACC,IAAP,CAAYV,MAAZ,EAAoBW,GAApB,CAAwB,CAACC,KAAD,EAAQC,KAAR,EAAeC,KAAf,kBACrB;AAAA,gBACKd,MAAM,CAACY,KAAD,CAAN,CAAcd,KAAd,IAAuB,CAAvB,gBAA2B,qCAA3B,gBACK;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,gCACE;AAAA,qBAAKE,MAAM,CAACY,KAAD,CAAN,CAAcG,KAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAMlB,IAAI,CAACG,MAAM,CAACY,KAAD,CAAN,CAAcd,KAAf,EAAsBE,MAAM,CAACY,KAAD,CAAN,CAAcb,KAApC;AAAV;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAA,iCAAYC,MAAM,CAACY,KAAD,CAAN,CAAcd,KAA1B;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,gCAAWE,MAAM,CAACY,KAAD,CAAN,CAAcI,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFV;AAAA;AAAA;AAAA;AAAA,YADH,CAbL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA2BH","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport nor1 from 'features/review/garden/images/normal/1.png'\nimport nor2 from 'features/review/garden/images/normal/2.png'\nimport nor3 from 'features/review/garden/images/normal/3.png'\nimport red4 from 'features/review/garden/images/red/4.png'\nimport red5 from 'features/review/garden/images/red/5.png'\nimport purple4 from 'features/review/garden/images/purple/4.png'\nimport purple5 from 'features/review/garden/images/purple/5.png'\nimport blue4 from 'features/review/garden/images/blue/4.png'\nimport blue5 from 'features/review/garden/images/blue/5.png'\nimport 'features/review/style/gridStyle.scss'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { flowerListRequest, routineRequest } from \"features/review/reducer/gardenSlice\";\nimport { values } from \"lodash\";\nimport Button from '@mui/material/Button';\n\n\nexport default function Flower() {\n    const [counter, setCounter] = useState(0)\n    const grow = (grade, color) => {\n        if (grade === \"1\") {\n            return (<img className='flower-img' src={nor1} />)\n        } if (grade === \"2\") {\n            return (<img className='flower-img' src={nor2} />)\n        } if (grade === \"3\") {\n            return (<img className='flower-img' src={nor3} />)\n        } if (grade === \"4\") {\n            if (color === \"RED\") {\n                return (<img className='flower-img' src={red4} />)\n            }\n            if (color === \"BLUE\") {\n                return (<img className='flower-img' src={blue4} />)\n            }\n            else {\n                return (<img className='flower-img' src={purple4} />)\n            }\n        } if (grade === \"5\") {\n            if (color === \"RED\") {\n                return (<img className='flower-img' src={red5} />)\n            }\n            if (color === \"BLUE\") {\n                return (<img className='flower-img' src={blue5} />)\n            }\n            else {\n                return (<img className='flower-img' src={purple5} />)\n            }\n        } else {\n            return (<></>)\n        }\n    }\n    const [flower, setFlower] = useState(\n        {\n            data:\n            {\n                \"id\": \"1\",\n                \"create_date\": \"2021-12-13 16:56:53.704187+00:00\",\n                \"update_date\": \"2021-12-13 16:56:53.704187+00:00\",\n                \"title\": \"작업\",\n                \"grade\": \"0\",\n                \"step\": \"1\",\n                \"color\": \"YELLOW\",\n                \"log_id\": \"[15]\",\n                \"event_id\": null,\n                \"user_id\": \"1\"\n            }\n        }\n    )\n    useEffect(() => {\n        dispatch(flowerListRequest({\n            user_id: 1,\n        }))\n    }, []);\n    const dispatch = useDispatch()\n    const flowers = useSelector(state => state.garden.gardenData)\n    if (flowers != null && counter < 1) {\n        setCounter(counter + 1)\n        setFlower(flowers.data)\n    }\n    return (\n        <div>\n            <Button type=\"submit\" variant=\"text\"\n          onClick={\n            () => {\n              dispatch(routineRequest({\n                user_id : 1\n              }))\n            }\n          } >오늘 루틴과 꽃 만들기</Button>\n            {/* <h2>지금까지 키운 꽃 :</h2>\n            {Object.keys(flower).map((value, index, array) => (\n                <p><b>{flower[value].title}</b> :: {flower[value].step} 회</p>\n            ))} */}\n            {Object.keys(flower).map((value, index, array) => (\n                <div>\n                    {flower[value].grade == 0 ? <></>\n                        : <div className=\"flower-div\" >\n                            <h1>{flower[value].title} 꽃을 키워보자!</h1>\n                            <div>{grow(flower[value].grade, flower[value].color)}</div>\n                            <p>GRADE : {flower[value].grade}</p>\n                            <p>STEP : {flower[value].step}</p>\n                        </div>}\n                </div>\n            ))}\n        </div >\n    )\n}"]},"metadata":{},"sourceType":"module"}